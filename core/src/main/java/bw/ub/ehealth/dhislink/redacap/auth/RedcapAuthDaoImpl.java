// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on 05/25/2020 23:03:05+0200.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.ub.ehealth.dhislink.redacap.auth;

import bw.ub.ehealth.dhislink.redacap.auth.vo.RedcapAuthLocationVO;
import bw.ub.ehealth.dhislink.redacap.auth.vo.RedcapAuthVO;
import org.springframework.stereotype.Repository;

/**
 * @see RedcapAuth
 */
@Repository("redcapAuthDao")
public class RedcapAuthDaoImpl
    extends RedcapAuthDaoBase
{
    /**
     * {@inheritDoc}
     */
    @Override
    protected String handleFindUsernameSalt(String username)
    {
        // TODO implement public String handleFindUsernameSalt(String username)
        return null;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected RedcapAuth handleUserAuthentication(String username, String password)
    {
        // TODO implement public RedcapAuth handleUserAuthentication(String username, String password)
        return null;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toRedcapAuthVO(
        RedcapAuth source,
        RedcapAuthVO target)
    {
        // TODO verify behavior of toRedcapAuthVO
        super.toRedcapAuthVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedcapAuthVO toRedcapAuthVO(final RedcapAuth entity)
    {
        // TODO verify behavior of toRedcapAuthVO
        return super.toRedcapAuthVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private RedcapAuth loadRedcapAuthFromRedcapAuthVO(RedcapAuthVO redcapAuthVO)
    {
        // TODO implement loadRedcapAuthFromRedcapAuthVO
        throw new UnsupportedOperationException("bw.ub.ehealth.dhislink.redacap.auth.loadRedcapAuthFromRedcapAuthVO(RedcapAuthVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (redcapAuthVO.getId() == null)
        {
            return  RedcapAuth.Factory.newInstance();
        }
        else
        {
            return this.load(redcapAuthVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public RedcapAuth redcapAuthVOToEntity(RedcapAuthVO redcapAuthVO)
    {
        // TODO verify behavior of redcapAuthVOToEntity
        RedcapAuth entity = this.loadRedcapAuthFromRedcapAuthVO(redcapAuthVO);
        this.redcapAuthVOToEntity(redcapAuthVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void redcapAuthVOToEntity(
        RedcapAuthVO source,
        RedcapAuth target,
        boolean copyIfNull)
    {
        // TODO verify behavior of redcapAuthVOToEntity
        super.redcapAuthVOToEntity(source, target, copyIfNull);
    }
    /**
     * {@inheritDoc}
     */
    @Override
    public void toRedcapAuthLocationVO(
        RedcapAuth source,
        RedcapAuthLocationVO target)
    {
        // TODO verify behavior of toRedcapAuthLocationVO
        super.toRedcapAuthLocationVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedcapAuthLocationVO toRedcapAuthLocationVO(final RedcapAuth entity)
    {
        // TODO verify behavior of toRedcapAuthLocationVO
        return super.toRedcapAuthLocationVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private RedcapAuth loadRedcapAuthFromRedcapAuthLocationVO(RedcapAuthLocationVO redcapAuthLocationVO)
    {
        // TODO implement loadRedcapAuthFromRedcapAuthLocationVO
        throw new UnsupportedOperationException("bw.ub.ehealth.dhislink.redacap.auth.loadRedcapAuthFromRedcapAuthLocationVO(RedcapAuthLocationVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (redcapAuthLocationVO.getId() == null)
        {
            return  RedcapAuth.Factory.newInstance();
        }
        else
        {
            return this.load(redcapAuthLocationVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public RedcapAuth redcapAuthLocationVOToEntity(RedcapAuthLocationVO redcapAuthLocationVO)
    {
        // TODO verify behavior of redcapAuthLocationVOToEntity
        RedcapAuth entity = this.loadRedcapAuthFromRedcapAuthLocationVO(redcapAuthLocationVO);
        this.redcapAuthLocationVOToEntity(redcapAuthLocationVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void redcapAuthLocationVOToEntity(
        RedcapAuthLocationVO source,
        RedcapAuth target,
        boolean copyIfNull)
    {
        // TODO verify behavior of redcapAuthLocationVOToEntity
        super.redcapAuthLocationVOToEntity(source, target, copyIfNull);
    }
}